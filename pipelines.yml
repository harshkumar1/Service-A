template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: dbp_repo
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.serviceA.gitProvider }}
      path: {{ .Values.serviceA.path }}
      branches:
        include: {{ .Values.serviceA.branches }} 

  - name: dbp_image
    type: Image
    configuration:
      registry: {{ .Values.serviceA.artifactory }}
      sourceRepository: docker_local               # <-- required if registry is Artifactory
      #imageName: {{ .Values.serviceA.imageName }}
      imageTag: latest
      autoPull: true
      
  - name: dbp_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.serviceA.artifactory }}
      buildName: dbp_build
      buildNumber: 1    

  #- name: dbp_promoted_build_info
  #  type: BuildInfo
  #  configuration:
  #    sourceArtifactory: {{ .Values.serviceA.artifactory }}
  #    buildName: dbp_build
  #    buildNumber: 1
      

pipelines:
  - name: pipeline_dbp
    configuration:
      nodePool: {{ .Values.serviceA.nodePool }}
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: dbp_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: demo.jfrog-pipelines.com/harsh-docker-local-repo/service-a # {{ .Values.serviceA.imageName }}   # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: dbp_repo
          integrations:
            - name: {{ .Values.serviceA.artifactory }}                             # <-- replace with your artifactory integration

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: dbp_group
          targetRepository: docker-local
          integrations:
            - name: {{ .Values.serviceA.artifactory }}                             # <-- replace with your artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: dbp_image

      - name: publish_dbp_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_push
          outputResources:
            - name: dbp_build_info

      #- name: promote_dbp_build
      #  type: PromoteBuild
      #  configuration:
      #    targetRepository: demo-pipelines
      #    integrations:
      #      - name: {{ .Values.serviceA.artifactory }}
      #    inputResources:
      #      - name: dbp_build_info
      #    outputResources:
      #      - name: dbp_promoted_build_info
